# G-MovieRecommender
# Created by Gagan - Internship Project

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Step 1: Movie dataset created manually
movie_data = {
    'Movie_Name': [
        'Inception', 'Interstellar', 'The Dark Knight', 'Tenet', 'Shutter Island',
        'The Prestige', 'Gravity', 'Avatar', 'The Matrix', 'Arrival'
    ],
    'Tags': [
        'dream sci-fi thriller', 'space sci-fi emotional', 'action hero dark crime',
        'time travel action spy', 'mystery mental drama', 'magic mystery suspense',
        'space survival emotional', 'sci-fi alien war', 'virtual reality future',
        'alien communication sci-fi'
    ]
}

# Step 2: Load data into DataFrame
df = pd.DataFrame(movie_data)

# Step 3: Convert text tags into numerical features
vectorizer = TfidfVectorizer()
tag_matrix = vectorizer.fit_transform(df['Tags'])

# Step 4: Calculate similarity between movies
similarity = cosine_similarity(tag_matrix)

# Step 5: Function to recommend movies
def suggest_movies(movie_name):
    if movie_name not in df['Movie_Name'].values:
        print("\nMovie not found. Try another one.")
        return

    index = df[df['Movie_Name'] == movie_name].index[0]
    score_list = list(enumerate(similarity[index]))
    sorted_scores = sorted(score_list, key=lambda x: x[1], reverse=True)

    print(f"\nBecause you liked {movie_name}, here are top 3 suggestions:\n")
    for i in sorted_scores[1:4]:
        print("âž¤", df.iloc[i[0]]['Movie_Name'])

# Step 6: Try with your favorite movie
suggest_movies("Inception")
